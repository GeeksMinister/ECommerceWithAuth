@inject UserManager<IdentityUser> _userManager;

<style>
    #chatSection {
        position: absolute;
        left: 10px;
        bottom:70px ;
/*        background-color: transparent !important;*/
        z-index: 1;
        width: 23rem;
    }

    #chatWindow{
        min-height: 32rem;
        z-index: 2;
        display: none;
        border-radius: 3%;
        position: absolute;
        bottom: 0;
        left:0;
    }
</style>

<script>
    function openchat() {
        document.getElementById("chatWindow").style.display = "block";
        document.getElementById("chatButton").style.display = "none";
    }
    function closechat() {
        document.getElementById("chatWindow").style.display = "none";
        document.getElementById("chatButton").style.display = "block";
    }
</script>

@{
    string GetName()
    {
        string username = _userManager.GetUserName(User);
        string name = "name";
        if (username != null)
        {
            name = (char.ToUpper(username[0]) + username.Remove(username.IndexOf("@")).Substring(1));
        }
        return name;

    }
}


<div id="chatSection">
        <div id="chatButton" class="col-4">
            <button onclick="openchat()" class="w-100 btn btn-light btn-outline-dark fw-bold">Chat</button>
        </div>
        
        <div id="chatWindow" class="row justify-content-center">
            <div class="">
                @(await Html.RenderComponentAsync<ECommerceWithAuth.MVC.Views.Shared.Components.
                ChatComponent>(RenderMode.ServerPrerendered, new { Name = GetName() }))
            </div>
        </div>
</div>







  